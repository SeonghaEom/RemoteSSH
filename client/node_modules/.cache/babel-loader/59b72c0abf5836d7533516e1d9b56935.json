{"ast":null,"code":"var _jsxFileName = \"/Users/na/Documents/react-redux-boilerplate/src/containers/QuestionAnswer.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { getQuestionList, getComments, setQuestion } from '../actions';\nimport CommentSystem from './Comment'; // function Game() {\n//     return (\n//         <div>Hello </div>\n//     )\n// }\n//redux's state to this.props\n\nconst mapStateToProps = state => ({\n  questionList: state.questionList,\n  question: state.question\n}); //redux's dispatch to this.props\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    _getQuestionList: questionList => dispatch(getQuestionList(questionList)),\n    _getComments: question => dispatch(getComments(question)) // _setQuestion: (question) => dispatch(setQuestion(question)),\n\n  };\n};\n\nclass QuestionAnswer extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const {\n      a,\n      b,\n      c,\n      questionList,\n      question,\n      _getQuestionList,\n      _getComments\n    } = this.props; // const question = questionList.filter(function(element, index, array){\n    //   return (element[\"id\"] == questionId)\n    // })[0];\n\n    console.log(\"question \", this.props); // const commentList = _getComments(question);\n    // console.log(\"commentList \", commentList);\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-question\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"question-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 15\n      }\n    }, question[\"title\"]), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"question-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 15\n      }\n    }, question[\"body\"]), /*#__PURE__*/React.createElement(CommentSystem, {\n      comments: question[\"comments\"],\n      question: question,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 15\n      }\n    }));\n  }\n\n} //(reducer, action)\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(QuestionAnswer);","map":{"version":3,"sources":["/Users/na/Documents/react-redux-boilerplate/src/containers/QuestionAnswer.jsx"],"names":["React","connect","Link","getQuestionList","getComments","setQuestion","CommentSystem","mapStateToProps","state","questionList","question","mapDispatchToProps","dispatch","_getQuestionList","_getComments","QuestionAnswer","Component","constructor","props","render","a","b","c","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,eAAT,EAA0BC,WAA1B,EAAuCC,WAAvC,QAA0D,YAA1D;AACA,OAAOC,aAAP,MAA0B,WAA1B,C,CAEA;AACA;AACA;AACA;AACA;AAEA;;AACA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAChCC,EAAAA,YAAY,EAAED,KAAK,CAACC,YADY;AAEhCC,EAAAA,QAAQ,EAAEF,KAAK,CAACE;AAFgB,CAAL,CAA7B,C,CAMA;;;AACA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACHC,IAAAA,gBAAgB,EAAGJ,YAAD,IAAkBG,QAAQ,CAACT,eAAe,CAACM,YAAD,CAAhB,CADzC;AAEHK,IAAAA,YAAY,EAAGJ,QAAD,IAAcE,QAAQ,CAACR,WAAW,CAACM,QAAD,CAAZ,CAFjC,CAGH;;AAHG,GAAP;AAKD,CAND;;AASA,MAAMK,cAAN,SAA6Bf,KAAK,CAACgB,SAAnC,CAA6C;AACzCC,EAAAA,WAAW,CAAEC,KAAF,EAAQ;AACf,UAAMA,KAAN;AACH;;AAGDC,EAAAA,MAAM,GAAE;AACN,UAAM;AACJC,MAAAA,CADI;AACDC,MAAAA,CADC;AACEC,MAAAA,CADF;AAEJb,MAAAA,YAFI;AAGJC,MAAAA,QAHI;AAIJG,MAAAA,gBAJI;AAKJC,MAAAA;AALI,QAMF,KAAKI,KANT,CADM,CASN;AACA;AACA;;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyB,KAAKN,KAA9B,EAZM,CAaN;AACA;;AACE,wBACI;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGR,QAAQ,CAAC,OAAD,CADX,CADF,eAIE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,QAAQ,CAAC,MAAD,CADX,CAJF,eAOE,oBAAC,aAAD;AAAe,MAAA,QAAQ,EAAEA,QAAQ,CAAC,UAAD,CAAjC;AAA+C,MAAA,QAAQ,EAAEA,QAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,CADJ;AAWH;;AAhCwC,C,CAmC7C;;;AACA,eAAeT,OAAO,CAACM,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CI,cAA7C,CAAf","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { getQuestionList, getComments, setQuestion } from '../actions';\nimport CommentSystem from './Comment';\n\n// function Game() {\n//     return (\n//         <div>Hello </div>\n//     )\n// }\n\n//redux's state to this.props\nconst mapStateToProps = state => ({\n  questionList: state.questionList,\n  question: state.question,\n\n})\n\n//redux's dispatch to this.props\nconst mapDispatchToProps = dispatch => {\n  return {\n      _getQuestionList: (questionList) => dispatch(getQuestionList(questionList)),\n      _getComments: (question) => dispatch(getComments(question)),\n      // _setQuestion: (question) => dispatch(setQuestion(question)),\n  }\n}\n\n\nclass QuestionAnswer extends React.Component {\n    constructor (props){\n        super(props);\n    }\n    \n\n    render(){\n      const {\n        a, b, c, \n        questionList,\n        question,\n        _getQuestionList,\n        _getComments\n      } = this.props;\n      \n      // const question = questionList.filter(function(element, index, array){\n      //   return (element[\"id\"] == questionId)\n      // })[0];\n      console.log(\"question \", this.props);\n      // const commentList = _getComments(question);\n      // console.log(\"commentList \", commentList);\n        return(\n            <div className=\"container-question\">\n              <div className=\"question-title\">\n                {question[\"title\"]}\n              </div>\n              <div className=\"question-body\">\n                {question[\"body\"]}\n              </div>\n              <CommentSystem comments={question[\"comments\"]} question={question}/>\n            </div>\n        )\n    }\n}\n\n//(reducer, action)\nexport default connect(mapStateToProps, mapDispatchToProps)(QuestionAnswer);"]},"metadata":{},"sourceType":"module"}