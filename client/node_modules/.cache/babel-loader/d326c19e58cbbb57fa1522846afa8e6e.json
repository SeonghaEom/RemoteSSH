{"ast":null,"code":"var _jsxFileName = \"/Users/na/Documents/react-redux-boilerplate2/src/containers/Login.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { login } from '../actions';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\n\nconst mapStateToProps = state => {\n  // console.log(state);\n  return {\n    loginResult: state.loginResult\n  };\n}; //redux's dispatch to this.props\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    _login: loginForm => dispatch(login(loginForm))\n  };\n};\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleOnChange = this.handleOnChange.bind(this);\n    this.state = {\n      idValue: 'test@test.com',\n      pwValue: 'testing!'\n    };\n  }\n\n  handleSubmit() {\n    // _addQuestion({title: this.state.titleValue, body: this.state.bodyValue});\n    // _getQuestionList(questionList)\n    this.props._login({\n      id: this.state.idValue,\n      pw: this.state.pwValue\n    });\n\n    console.log(this.props.loginResult);\n  }\n\n  handleOnChange(event, which) {\n    switch (which) {\n      case \"id\":\n        this.setState({\n          idValue: event.target.value\n        });\n        break;\n\n      case \"pw\":\n        this.setState({\n          pwValue: event.target.value\n        });\n        break;\n    }\n  }\n\n  render() {\n    console.log(this.props.loginResult);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"formBasicEmail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }\n    }, \"Email address\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"email\",\n      placeholder: \"Enter email\",\n      onChange: event => this.handleOnChange(event, \"id\"),\n      value: this.state.idValue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Form.Text, {\n      className: \"text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }\n    }, \"We'll never share your email with anyone else.\")), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"formBasicPassword\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"password\",\n      placeholder: \"Password\",\n      onChange: event => this.handleOnChange(event, \"pw\"),\n      value: this.state.pwValue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"formBasicCheckbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Form.Check, {\n      type: \"checkbox\",\n      label: \"Check me out\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 19\n      }\n    }, this.props.loginResult.type ? /*#__PURE__*/React.createElement(Link, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      onClick: () => this.handleSubmit(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 25\n      }\n    }, \" Login \")) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      onClick: () => this.handleSubmit(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 23\n      }\n    }, \" Login \"), this.props.loginResult.value && this.props.loginResult.value.message)))));\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/Users/na/Documents/react-redux-boilerplate2/src/containers/Login.jsx"],"names":["React","connect","Link","login","Button","Form","mapStateToProps","state","loginResult","mapDispatchToProps","dispatch","_login","loginForm","Login","Component","constructor","props","handleSubmit","bind","handleOnChange","idValue","pwValue","id","pw","console","log","event","which","setState","target","value","render","type","message"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { login } from '../actions';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\n\nconst mapStateToProps = state => {\n  // console.log(state);\n  return {\n  loginResult: state.loginResult,\n  }\n}\n\n//redux's dispatch to this.props\nconst mapDispatchToProps = dispatch => {\n    return {\n      _login : (loginForm) => dispatch(login(loginForm))\n    }\n}\n\nclass Login extends React.Component {\n  constructor (props){\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleOnChange = this.handleOnChange.bind(this);\n    this.state = {\n      idValue : 'test@test.com',\n      pwValue: 'testing!',\n    }\n  }\n\n  handleSubmit() {\n\n    // _addQuestion({title: this.state.titleValue, body: this.state.bodyValue});\n    // _getQuestionList(questionList)\n    this.props._login({id: this.state.idValue, pw: this.state.pwValue});\n    console.log(this.props.loginResult);\n  }\n\n  handleOnChange(event, which) {\n    switch (which){\n      case (\"id\"):\n        this.setState({\n          idValue: event.target.value\n        })\n      break;\n      case (\"pw\"):\n        this.setState({\n          pwValue: event.target.value\n        })\n      break;\n    }\n  }\n\n\n  render(){\n    console.log(this.props.loginResult);\n      return(\n            <div className=\"container-login\">\n              <div>\n                <Form>\n                  <Form.Group controlId=\"formBasicEmail\">\n                    <Form.Label>Email address</Form.Label>\n                    <Form.Control\n                      type=\"email\"\n                      placeholder=\"Enter email\"\n                      onChange={(event) => this.handleOnChange(event, \"id\")} value={this.state.idValue}\n                      />\n                    <Form.Text className=\"text-muted\">\n                      We'll never share your email with anyone else.\n                    </Form.Text>\n                  </Form.Group>\n\n                  <Form.Group controlId=\"formBasicPassword\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control\n                      type=\"password\"\n                      placeholder=\"Password\"\n                      onChange={(event) => this.handleOnChange(event, \"pw\")} value={this.state.pwValue}\n                      />\n                  </Form.Group>\n                  <Form.Group controlId=\"formBasicCheckbox\">\n                    <Form.Check type=\"checkbox\" label=\"Check me out\" />\n                  </Form.Group>\n                  <div>\n                  {this.props.loginResult.type\n                    ?\n                      <Link to = \"/\">\n                        <Button variant = \"primary\" onClick={() => this.handleSubmit()}> Login </Button>\n                      </Link>\n                    :\n                      <div>\n                      <Button variant = \"primary\" onClick={() => this.handleSubmit()}> Login </Button>\n                      {this.props.loginResult.value && this.props.loginResult.value.message}\n                      </div>\n                  }\n                  </div>\n                </Form>\n              </div>\n            </div>\n      )\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);"]},"metadata":{},"sourceType":"module"}