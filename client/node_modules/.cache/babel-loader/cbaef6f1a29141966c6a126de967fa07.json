{"ast":null,"code":"var _jsxFileName = \"/Users/na/Documents/react-redux-boilerplate/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { PersistGate } from 'redux-persist/lib/integration/react';\nimport { persistor, store } from './store';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport { ReactReduxFirebaseProvider } from \"react-redux-firebase\";\nimport { createFirestoreInstance } from \"redux-firestore\";\nimport 'semantic-ui-css/semantic.min.css';\nconst rrfConfig = {\n  userProfile: \"users\",\n  useFirestoreForProfile: true\n};\nconst rrfProps = {\n  firebase,\n  config: rrfConfig,\n  dispatch: store.dispatch,\n  createFirestoreInstance\n};\nReactDOM.render( /*#__PURE__*/React.createElement(Provider, {\n  store: store,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(PersistGate, {\n  loading: null,\n  persistor: persistor,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(ReactReduxFirebaseProvider, Object.assign({}, rrfProps, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 11\n  }\n}), /*#__PURE__*/React.createElement(React.StrictMode, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 15\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 17\n  }\n})), \",\"))), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/na/Documents/react-redux-boilerplate/src/index.js"],"names":["React","ReactDOM","Provider","App","serviceWorker","PersistGate","persistor","store","firebase","ReactReduxFirebaseProvider","createFirestoreInstance","rrfConfig","userProfile","useFirestoreForProfile","rrfProps","config","dispatch","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,QAAT,QAAyB,aAAzB;AAEA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,SAASC,WAAT,QAA4B,qCAA5B;AACA,SAASC,SAAT,EAAoBC,KAApB,QAAiC,SAAjC;AACA,OAAO,sCAAP;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,OAAO,eAAP;AACA,OAAO,oBAAP;AACA,SAASC,0BAAT,QAA2C,sBAA3C;AACA,SAASC,uBAAT,QAAwC,iBAAxC;AACA,OAAO,kCAAP;AAEA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,WAAW,EAAE,OADG;AAEhBC,EAAAA,sBAAsB,EAAE;AAFR,CAAlB;AAKA,MAAMC,QAAQ,GAAG;AACfN,EAAAA,QADe;AAEfO,EAAAA,MAAM,EAAEJ,SAFO;AAGfK,EAAAA,QAAQ,EAAET,KAAK,CAACS,QAHD;AAIfN,EAAAA;AAJe,CAAjB;AAMAT,QAAQ,CAACgB,MAAT,eACI,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAEV,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACI,oBAAC,WAAD;AAAa,EAAA,OAAO,EAAE,IAAtB;AAA4B,EAAA,SAAS,EAAED,SAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,0BAAD,oBAAgCQ,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACI,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADJ,MADF,CADJ,CADJ,EAUII,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAVJ,E,CAaA;AACA;AACA;;AACAf,aAAa,CAACgB,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { PersistGate } from 'redux-persist/lib/integration/react';\nimport { persistor, store } from './store';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport { ReactReduxFirebaseProvider } from \"react-redux-firebase\";\nimport { createFirestoreInstance } from \"redux-firestore\";\nimport 'semantic-ui-css/semantic.min.css'\n\nconst rrfConfig = {\n  userProfile: \"users\",\n  useFirestoreForProfile: true,\n};\n\nconst rrfProps = {\n  firebase,\n  config: rrfConfig,\n  dispatch: store.dispatch,\n  createFirestoreInstance,\n};\nReactDOM.render(\n    <Provider store={store}>\n        <PersistGate loading={null} persistor={persistor}>\n          <ReactReduxFirebaseProvider {...rrfProps}>\n              <React.StrictMode>\n                <App />\n              </React.StrictMode>,\n          </ReactReduxFirebaseProvider>\n        </PersistGate>\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}