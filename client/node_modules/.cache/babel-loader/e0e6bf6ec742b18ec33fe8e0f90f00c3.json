{"ast":null,"code":"var _jsxFileName = \"/Users/na/Documents/RemoteSSH/src/components/RoomList.js\";\nimport React, { useEffect, useState } from \"react\";\nimport firestore from \"../config/fbconfig\";\nimport { useHistory } from 'react-router-dom';\nimport socket from '../socket';\n\nconst RoomList = ({\n  display,\n  roomId,\n  goToScreen\n}) => {\n  const [roomList, setRoomList] = useState([]);\n  const [userList, setUserList] = useState([]);\n  const history = useHistory();\n  useEffect(() => {\n    async function fetchData() {\n      await fetch('http://localhost:9000/room-list').then(function (response) {\n        return response.json();\n      }).then(json => {\n        setRoomList(json);\n        json.forEach(roomId => {\n          socket.emit('BE-get-all-users', roomId);\n        });\n      });\n    }\n\n    fetchData();\n    socket.on('FE-show-all-users', ({\n      roomId,\n      users\n    }) => {\n      setUserList(preList => {\n        preList = preList.concat({\n          roomId: roomId,\n          users: users\n        });\n        console.log(preList);\n        return preList;\n      });\n    });\n  }, []);\n\n  function drawUsers(users) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"roomlist-container-user\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }, users.length > 0 ? users.map(userinfo => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"room-list\" // onHover={() => {\n      //     history.push('/join?roomId=' + roomuser.roomId);\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }\n    }, userinfo.info.userName)) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 15\n      }\n    }, \"Loading\"));\n  }\n\n  ;\n\n  const Close = goToScreen => {\n    goToScreen;\n    history.go(0);\n  }; // Room list from server\n  // fetch('http://localhost:9000/room-list').then(r =>\n  //     r.json()\n  // ).then(roomList => {\n  //     setRoomList(roomList);\n  // })\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"roomlist-background\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 16\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      justifyContent: 'start'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"close\",\n    onClick: goToScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      color: 'white',\n      fontSize: '26px',\n      marginTop: '40px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, \"Change Tables\")), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      justifyContent: 'start'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 15\n    }\n  }, userList.length > 0 ? userList.map(roomuser => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"roomlist-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"roomlist-roomId\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 29\n    }\n  }, roomuser.roomId), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 29\n    }\n  }, drawUsers(roomuser.users)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"join-table\",\n    onClick: () => {\n      history.push(roomuser.roomId); // window.location.href='room/' + roomuser.roomId;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 29\n    }\n  }, \"Join Table\"))) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 27\n    }\n  }, \"The room is empty!\")));\n};\n\nexport default RoomList;","map":{"version":3,"sources":["/Users/na/Documents/RemoteSSH/src/components/RoomList.js"],"names":["React","useEffect","useState","firestore","useHistory","socket","RoomList","display","roomId","goToScreen","roomList","setRoomList","userList","setUserList","history","fetchData","fetch","then","response","json","forEach","emit","on","users","preList","concat","console","log","drawUsers","length","map","userinfo","info","userName","Close","go","flexWrap","justifyContent","color","fontSize","marginTop","roomuser","push"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,MAAP,MAAmB,WAAnB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,MAAX;AAAmBC,EAAAA;AAAnB,CAAD,KAAqC;AAElD,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAMY,OAAO,GAAGV,UAAU,EAA1B;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAec,SAAf,GAA0B;AACxB,YAAMC,KAAK,CAAC,iCAAD,CAAL,CACHC,IADG,CACE,UAASC,QAAT,EAAmB;AACvB,eAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,OAHK,EAGHF,IAHG,CAGGE,IAAD,IAAU;AAChBR,QAAAA,WAAW,CAACQ,IAAD,CAAX;AACAA,QAAAA,IAAI,CAACC,OAAL,CAAcZ,MAAD,IAAY;AACvBH,UAAAA,MAAM,CAACgB,IAAP,CAAY,kBAAZ,EAAgCb,MAAhC;AACD,SAFD;AAGD,OARK,CAAN;AAQG;;AACLO,IAAAA,SAAS;AACTV,IAAAA,MAAM,CAACiB,EAAP,CAAU,mBAAV,EAA+B,CAAC;AAACd,MAAAA,MAAD;AAASe,MAAAA;AAAT,KAAD,KAAqB;AAClDV,MAAAA,WAAW,CAAEW,OAAD,IAAa;AAEvBA,QAAAA,OAAO,GAAGA,OAAO,CAACC,MAAR,CAAe;AACrBjB,UAAAA,MAAM,EAAEA,MADa;AAErBe,UAAAA,KAAK,EAAEA;AAFc,SAAf,CAAV;AAIAG,QAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AACA,eAAOA,OAAP;AACD,OARU,CAAX;AASD,KAVD;AAYD,GAxBQ,EAwBN,EAxBM,CAAT;;AA2BA,WAASI,SAAT,CAAmBL,KAAnB,EAAyB;AACvB,wBACE;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEIA,KAAK,CAACM,MAAN,GAAe,CAAf,GACEN,KAAK,CAACO,GAAN,CAAWC,QAAD,iBACR;AAAK,MAAA,SAAS,EAAE,WAAhB,CACI;AACA;AAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIKA,QAAQ,CAACC,IAAT,CAAcC,QAJnB,CADF,CADF,gBAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAVN,CADF;AAcD;;AAAA;;AAED,QAAMC,KAAK,GAAIzB,UAAD,IAAgB;AAC5BA,IAAAA,UAAU;AACVK,IAAAA,OAAO,CAACqB,EAAR,CAAW,CAAX;AACD,GAHD,CAlDkD,CAuDtD;AACQ;AACA;AACA;AACA;AACA;;;AAEA,sBAAO;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACD;AAAK,IAAA,KAAK,EAAE;AAAC5B,MAAAA,OAAO,EAAE,MAAV;AAAkB6B,MAAAA,QAAQ,EAAE,MAA5B;AAAoCC,MAAAA,cAAc,EAAE;AAApD,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAuB,IAAA,OAAO,EAAE5B,UAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAK,IAAA,KAAK,EAAE;AAAC6B,MAAAA,KAAK,EAAE,OAAR;AAAiBC,MAAAA,QAAQ,EAAE,MAA3B;AAAmCC,MAAAA,SAAS,EAAE;AAA9C,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFF,CADC,eAOD;AAAK,IAAA,KAAK,EAAE;AAACjC,MAAAA,OAAO,EAAE,MAAV;AAAkB6B,MAAAA,QAAQ,EAAE,MAA5B;AAAoCC,MAAAA,cAAc,EAAE;AAApD,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEOzB,QAAQ,CAACiB,MAAT,GAAkB,CAAlB,GACKjB,QAAQ,CAACkB,GAAT,CAAcW,QAAD,iBACf;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,QAAQ,CAACjC,MADZ,CADJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEKoB,SAAS,CAACa,QAAQ,CAAClB,KAAV,CAFd,CAJJ,eAQI;AAAK,IAAA,SAAS,EAAC,YAAf;AACI,IAAA,OAAO,EAAE,MAAM;AACXT,MAAAA,OAAO,CAAC4B,IAAR,CAAaD,QAAQ,CAACjC,MAAtB,EADW,CAEX;AAEH,KALL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBARJ,CADE,CADL,gBAkBK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BApBZ,CAPC,CAAP;AA+BH,CA7FL;;AAiGA,eAAeF,QAAf","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport firestore from \"../config/fbconfig\";\nimport { useHistory } from 'react-router-dom';\nimport socket from '../socket';\n\nconst RoomList = ({ display, roomId, goToScreen }) => {\n\n    const [roomList, setRoomList] = useState([]);\n    const [userList, setUserList] = useState([]);\n    const history = useHistory()\n\n    useEffect(() => {\n      async function fetchData(){\n        await fetch('http://localhost:9000/room-list')\n          .then(function(response) {\n            return response.json();\n        }).then((json) => {\n          setRoomList(json);\n          json.forEach((roomId) => {\n            socket.emit('BE-get-all-users', roomId);\n          })\n        })}\n      fetchData();\n      socket.on('FE-show-all-users', ({roomId, users}) => {\n        setUserList((preList) => {\n          \n          preList = preList.concat({\n              roomId: roomId,\n              users: users,\n          })\n          console.log(preList);\n          return preList;\n        })\n      });\n\n    }, []);\n\n\n    function drawUsers(users){\n      return (\n        <div className='roomlist-container-user'>\n          \n          {(users.length > 0\n            ? users.map((userinfo) =>\n                <div className= 'room-list'\n                    // onHover={() => {\n                    //     history.push('/join?roomId=' + roomuser.roomId);\n                >\n                    {userinfo.info.userName}\n                </div>)\n            : <div>Loading</div>)}\n        </div>\n      )\n    };\n\n    const Close = (goToScreen) => {\n      goToScreen;\n      history.go(0);\n    }\n\n// Room list from server\n        // fetch('http://localhost:9000/room-list').then(r =>\n        //     r.json()\n        // ).then(roomList => {\n        //     setRoomList(roomList);\n        // })\n\n        return <div className='roomlist-background'>\n              <div style={{display: 'flex', flexWrap: 'wrap', justifyContent: 'start'}}>\n                <div className=\"close\" onClick={goToScreen}></div>\n                <div style={{color: 'white', fontSize: '26px', marginTop: '40px'}}>\n                  Change Tables\n                </div>\n              </div>\n              <div style={{display: 'flex', flexWrap: 'wrap', justifyContent: 'start'}} >\n                {\n                    (userList.length > 0\n                        ? userList.map((roomuser) =>\n                        <div className=\"roomlist-container\">\n                            <div className=\"roomlist-roomId\">\n                              {roomuser.roomId}\n                            </div>\n                            <div >\n                                \n                                {drawUsers(roomuser.users)}\n                            </div>\n                            <div className=\"join-table\"\n                                onClick={() => {\n                                    history.push(roomuser.roomId);\n                                    // window.location.href='room/' + roomuser.roomId;\n                                    \n                                }} \n                            >Join Table</div>\n                        </div>)\n                        : <div>The room is empty!</div>)\n                }\n            </div>\n        </div>\n    }\n;\n\n\nexport default RoomList;\n"]},"metadata":{},"sourceType":"module"}