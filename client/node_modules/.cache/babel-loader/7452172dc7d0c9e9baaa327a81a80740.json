{"ast":null,"code":"var _jsxFileName = \"/Users/na/Documents/RemoteSSH/src/components/Room/Room.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport Peer from 'simple-peer';\nimport styled from 'styled-components';\nimport socket from '../../socket';\nimport VideoCard from '../Video/VideoCard';\nimport BottomBar from '../BottomBar/BottomBar';\nimport Chat from '../Chat/Chat';\nimport AddWish from '../WishList/AddWish';\nimport Wish from '../WishList/Wish';\nimport RoomList from '../RoomList';\nimport Layout from '../TopicModal/Layout';\nimport wishicon from \"../../assets/wish_red.svg\";\n\nconst Room = props => {\n  var currentUser = sessionStorage.getItem('user');\n  const [peers, setPeers] = useState([]);\n  const [userVideoAudio, setUserVideoAudio] = useState({\n    localUser: {\n      video: true,\n      audio: true\n    }\n  });\n  const [wishlist, setWishList] = useState([]);\n  const [displayChat, setDisplayChat] = useState(false);\n  const [displayWish, setDisplayWish] = useState(false);\n  const [displayOtherTable, setDisplayOtherTable] = useState(false);\n  const [displayAdd, setDisplayAdd] = useState(false);\n  const [screenShare, setScreenShare] = useState(false);\n  const peersRef = useRef([]);\n  const userVideoRef = useRef();\n  const screenTrackRef = useRef();\n  const userStream = useRef();\n  var roomId = props.match.params.roomId;\n  console.log(\"Room \", sessionStorage);\n  useEffect(() => {\n    // Set Back Button Event\n    window.addEventListener('popstate', goToBack);\n    console.log(\"peers \", peers); // Connect Camera & Mic\n\n    navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: true\n    }).then(stream => {\n      userVideoRef.current.srcObject = stream;\n      userStream.current = stream;\n      console.log(currentUser);\n      socket.emit('BE-join-room', {\n        roomId,\n        userName: currentUser\n      });\n      socket.on('FE-user-join', users => {\n        // all users\n        console.log(users);\n        const peers = [];\n        users.forEach(({\n          userId,\n          info\n        }) => {\n          let {\n            userName,\n            video,\n            audio\n          } = info;\n\n          if (userName !== currentUser) {\n            const peer = createPeer(userId, socket.id, stream);\n            peer.userName = userName;\n            peer.peerID = userId;\n            peersRef.current.push({\n              peerID: userId,\n              peer,\n              userName\n            });\n            peers.push(peer);\n            setUserVideoAudio(preList => {\n              return { ...preList,\n                [peer.userName]: {\n                  video,\n                  audio\n                }\n              };\n            });\n          }\n        });\n        setPeers(peers);\n      });\n      socket.on('FE-receive-call', ({\n        signal,\n        from,\n        info\n      }) => {\n        let {\n          userName,\n          video,\n          audio\n        } = info;\n        const peerIdx = findPeer(from);\n\n        if (!peerIdx) {\n          const peer = addPeer(signal, from, stream);\n          peer.userName = userName;\n          peersRef.current.push({\n            peerID: from,\n            peer,\n            userName: userName\n          });\n          setPeers(users => {\n            return [...users, peer];\n          });\n          setUserVideoAudio(preList => {\n            return { ...preList,\n              [peer.userName]: {\n                video,\n                audio\n              }\n            };\n          });\n        }\n      });\n      socket.on('FE-call-accepted', ({\n        signal,\n        answerId\n      }) => {\n        const peerIdx = findPeer(answerId);\n        peerIdx.peer.signal(signal);\n      });\n      socket.on('FE-user-leave', ({\n        userId,\n        userName\n      }) => {\n        const peerIdx = findPeer(userId);\n        peerIdx.peer.destroy();\n        setPeers(users => {\n          users = users.filter(user => user.peerID !== peerIdx.peer.peerID);\n          return [...users];\n        });\n      });\n    });\n    socket.on('FE-toggle-camera', ({\n      userId,\n      switchTarget\n    }) => {\n      const peerIdx = findPeer(userId);\n      setUserVideoAudio(preList => {\n        let video = preList[peerIdx.userName].video;\n        let audio = preList[peerIdx.userName].audio;\n        if (switchTarget === 'video') video = !video;else audio = !audio;\n        return { ...preList,\n          [peerIdx.userName]: {\n            video,\n            audio\n          }\n        };\n      });\n    });\n    return () => {\n      socket.disconnect();\n    }; // eslint-disable-next-line\n  }, []);\n  useEffect(() => {\n    const start = new Date();\n    let latestCheckTime = start;\n    const intervalId = setInterval(() => {\n      const now = new Date();\n      const delta = now - latestCheckTime;\n      console.log(delta);\n      latestCheckTime = now; //update firebase user studytime by adding\n    }, 60000);\n    return () => {\n      // unmount\n      clearInterval(intervalId);\n    };\n  }, []);\n\n  function createPeer(userId, caller, stream) {\n    const peer = new Peer({\n      initiator: true,\n      trickle: false,\n      stream\n    });\n    peer.on('signal', signal => {\n      socket.emit('BE-call-user', {\n        userToCall: userId,\n        from: caller,\n        signal\n      });\n    });\n    peer.on('disconnect', () => {\n      peer.destroy();\n    });\n    return peer;\n  }\n\n  function addPeer(incomingSignal, callerId, stream) {\n    const peer = new Peer({\n      initiator: false,\n      trickle: false,\n      stream\n    });\n    peer.on('signal', signal => {\n      socket.emit('BE-accept-call', {\n        signal,\n        to: callerId\n      });\n    });\n    peer.on('disconnect', () => {\n      peer.destroy();\n    });\n    peer.signal(incomingSignal);\n    return peer;\n  }\n\n  function findPeer(id) {\n    return peersRef.current.find(p => p.peerID === id);\n  }\n\n  function createUserVideo(peer, index, arr) {\n    return /*#__PURE__*/React.createElement(VideoContainer, {\n      className: \"room-video-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(VideoBox, {\n      className: \"room-video-box\",\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }\n    }, writeUserName(peer.userName), /*#__PURE__*/React.createElement(FaIcon, {\n      className: \"fas fa-expand\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(VideoCard, {\n      key: index,\n      peer: peer,\n      number: arr.length,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(UserName, {\n      className: \"room-userName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }\n    }, peer.userName), /*#__PURE__*/React.createElement(UserFood, {\n      className: \"room-userFood\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: 'https://images.pexels.com/photos/708587/pexels-photo-708587.jpeg?auto=compress&cs=tinysrgb&h=750&w=1260',\n      width: \"300\",\n      height: \"300\",\n      alt: peer.userName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(AddButton, {\n      onClick: clickAdd,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: wishicon,\n      alt: \"add wish\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 11\n      }\n    })));\n  }\n\n  function writeUserName(userName, index) {\n    if (userVideoAudio.hasOwnProperty(userName)) {\n      if (!userVideoAudio[userName].video) {\n        return /*#__PURE__*/React.createElement(UserName, {\n          key: userName,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 16\n          }\n        }, userName);\n      }\n    }\n  } // Open Chat\n\n\n  const clickChat = e => {\n    e.stopPropagation();\n    setDisplayChat(!displayChat);\n  };\n\n  const clickWish = e => {\n    e.stopPropagation();\n    setDisplayWish(!displayWish);\n  };\n\n  const clickAdd = e => {\n    e.stopPropagation();\n    setDisplayAdd(!displayAdd);\n  }; // BackButton\n\n\n  const goToOtherTable = e => {\n    e.stopPropagation();\n    setDisplayOtherTable(!displayOtherTable);\n    console.log(displayOtherTable); // e.preventDefault();\n    // socket.emit('BE-leave-room', { roomId, leaver: currentUser });\n    // sessionStorage.removeItem('user');\n    // window.location.href = '/room-list';\n  };\n\n  const goToBack = e => {\n    e.preventDefault();\n    socket.emit('BE-leave-room', {\n      roomId,\n      leaver: currentUser\n    });\n    sessionStorage.removeItem('user');\n    window.location.href = '/';\n  };\n\n  const toggleCameraAudio = e => {\n    const target = e.target.getAttribute('data-switch');\n    setUserVideoAudio(preList => {\n      let videoSwitch = preList['localUser'].video;\n      let audioSwitch = preList['localUser'].audio;\n\n      if (target === 'video') {\n        const userVideoTrack = userVideoRef.current.srcObject.getVideoTracks()[0];\n        videoSwitch = !videoSwitch;\n        userVideoTrack.enabled = videoSwitch;\n      } else {\n        const userAudioTrack = userVideoRef.current.srcObject.getAudioTracks()[0];\n        audioSwitch = !audioSwitch;\n\n        if (userAudioTrack) {\n          userAudioTrack.enabled = audioSwitch;\n        } else {\n          userStream.current.getAudioTracks()[0].enabled = audioSwitch;\n        }\n      }\n\n      return { ...preList,\n        localUser: {\n          video: videoSwitch,\n          audio: audioSwitch\n        }\n      };\n    });\n    socket.emit('BE-toggle-camera-audio', {\n      roomId,\n      switchTarget: target\n    });\n  };\n\n  const clickScreenSharing = () => {\n    if (!screenShare) {\n      navigator.mediaDevices.getDisplayMedia({\n        cursor: true\n      }).then(stream => {\n        const screenTrack = stream.getTracks()[0];\n        peersRef.current.forEach(({\n          peer\n        }) => {\n          // replaceTrack (oldTrack, newTrack, oldStream);\n          peer.replaceTrack(peer.streams[0].getTracks().find(track => track.kind === 'video'), screenTrack, userStream.current);\n        }); // Listen click end\n\n        screenTrack.onended = () => {\n          peersRef.current.forEach(({\n            peer\n          }) => {\n            peer.replaceTrack(screenTrack, peer.streams[0].getTracks().find(track => track.kind === 'video'), userStream.current);\n          });\n          userVideoRef.current.srcObject = userStream.current;\n          setScreenShare(false);\n        };\n\n        userVideoRef.current.srcObject = stream;\n        screenTrackRef.current = screenTrack;\n        setScreenShare(true);\n      });\n    } else {\n      screenTrackRef.current.onended();\n    }\n  };\n\n  const expandScreen = e => {\n    const elem = e.target;\n\n    if (elem.requestFullscreen) {\n      elem.requestFullscreen();\n    } else if (elem.mozRequestFullScreen) {\n      /* Firefox */\n      elem.mozRequestFullScreen();\n    } else if (elem.webkitRequestFullscreen) {\n      /* Chrome, Safari & Opera */\n      elem.webkitRequestFullscreen();\n    } else if (elem.msRequestFullscreen) {\n      /* IE/Edge */\n      elem.msRequestFullscreen();\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(RoomContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(AddWish, {\n    displayAdd: displayAdd,\n    wishlist: wishlist,\n    setWishList: setWishList,\n    userName: peer.userName,\n    userFood: wishicon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(VideoAndBarContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 7\n    }\n  }, displayOtherTable ? /*#__PURE__*/React.createElement(RoomList, {\n    display: displayOtherTable,\n    roomId: roomId,\n    goToScreen: goToOtherTable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"room-display-every\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(VideoContainer, {\n    className: \"room-video-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(VideoBox, {\n    className: \"room-video-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FaIcon, {\n    className: \"fas fa-expand\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(MyVideo, {\n    onClick: expandScreen,\n    ref: userVideoRef,\n    muted: true,\n    autoPlay: true,\n    playInline: true,\n    className: \"myvideo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(UserFood, {\n    className: \"room-userFood\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: 'https://images.pexels.com/photos/708587/pexels-photo-708587.jpeg?auto=compress&cs=tinysrgb&h=750&w=1260',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(UserName, {\n    className: \"room-userName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 15\n    }\n  }, currentUser)), peers && peers.map((peer, index, arr) => createUserVideo(peer, index, arr))), /*#__PURE__*/React.createElement(BottomBar, {\n    clickScreenSharing: clickScreenSharing,\n    clickChat: clickChat,\n    clickWish: clickWish,\n    goToBack: goToBack,\n    goToOtherTable: goToOtherTable,\n    toggleCameraAudio: toggleCameraAudio,\n    userVideoAudio: userVideoAudio['localUser'],\n    screenShare: screenShare,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Wish, {\n    displayWishlist: displayWish,\n    wishlist: wishlist,\n    setWishList: setWishList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Chat, {\n    display: displayChat,\n    roomId: roomId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst RoomContainer = styled.div`\n  display: flex;\n  width: 100%;\n  max-height: 100vh;\n  flex-direction: row;\n  overflow: invisible;\n`;\nconst VideoContainer = styled.div`\n\n`;\nconst VideoAndBarContainer = styled.div`\n  // position: relative;\n  width: 100%;\n  height: 100vh;\n`;\nconst MyVideo = styled.video``;\nconst VideoBox = styled.div`\n\n`;\nconst UserName = styled.div`\n\n`;\nconst UserFood = styled.div`\n  \n`;\nconst AddButton = styled.div`\n  width: auto;\n  border: none;\n  font-size: 0.9375rem;\n  padding: 5px;\n  \n  :hover {\n    background-color: #5A38FD;\n    cursor: pointer;\n    border-radius: 15px;\n  }\n\n  .sharing {\n    color: #ee2560;\n  }\n`;\nconst FaIcon = styled.i`\n  display: none;\n  position: absolute;\n  right: 15px;\n  top: 15px;\n`;\nexport default Room;","map":{"version":3,"sources":["/Users/na/Documents/RemoteSSH/src/components/Room/Room.js"],"names":["React","useState","useEffect","useRef","Peer","styled","socket","VideoCard","BottomBar","Chat","AddWish","Wish","RoomList","Layout","Room","props","currentUser","sessionStorage","getItem","peers","setPeers","userVideoAudio","setUserVideoAudio","localUser","video","audio","wishlist","setWishList","displayChat","setDisplayChat","displayWish","setDisplayWish","displayOtherTable","setDisplayOtherTable","displayAdd","setDisplayAdd","screenShare","setScreenShare","peersRef","userVideoRef","screenTrackRef","userStream","roomId","match","params","console","log","window","addEventListener","goToBack","navigator","mediaDevices","getUserMedia","then","stream","current","srcObject","emit","userName","on","users","forEach","userId","info","peer","createPeer","id","peerID","push","preList","signal","from","peerIdx","findPeer","addPeer","answerId","destroy","filter","user","switchTarget","disconnect","start","Date","latestCheckTime","intervalId","setInterval","now","delta","clearInterval","caller","initiator","trickle","userToCall","incomingSignal","callerId","to","find","p","createUserVideo","index","arr","writeUserName","length","clickAdd","wishicon","hasOwnProperty","clickChat","e","stopPropagation","clickWish","goToOtherTable","preventDefault","leaver","removeItem","location","href","toggleCameraAudio","target","getAttribute","videoSwitch","audioSwitch","userVideoTrack","getVideoTracks","enabled","userAudioTrack","getAudioTracks","clickScreenSharing","getDisplayMedia","cursor","screenTrack","getTracks","replaceTrack","streams","track","kind","onended","expandScreen","elem","requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","msRequestFullscreen","map","RoomContainer","div","VideoContainer","VideoAndBarContainer","MyVideo","VideoBox","UserName","UserFood","AddButton","FaIcon","i"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport Peer from 'simple-peer';\nimport styled from 'styled-components';\nimport socket from '../../socket';\nimport VideoCard from '../Video/VideoCard';\nimport BottomBar from '../BottomBar/BottomBar';\nimport Chat from '../Chat/Chat';\nimport AddWish from '../WishList/AddWish';\nimport Wish from '../WishList/Wish';\nimport RoomList from '../RoomList';\nimport Layout from '../TopicModal/Layout'\nimport wishicon from '../../assets/wish_red.svg';\n\nconst Room = (props) => {\n  var currentUser = sessionStorage.getItem('user');\n  const [peers, setPeers] = useState([]);\n  const [userVideoAudio, setUserVideoAudio] = useState({\n    localUser: { video: true, audio: true },\n  });\n  const [wishlist, setWishList] = useState([]);\n  const [displayChat, setDisplayChat] = useState(false);\n  const [displayWish, setDisplayWish] = useState(false);\n  const [displayOtherTable, setDisplayOtherTable] = useState(false);\n  const [displayAdd, setDisplayAdd] = useState(false);\n  const [screenShare, setScreenShare] = useState(false);\n  \n  const peersRef = useRef([]);\n  const userVideoRef = useRef();\n  const screenTrackRef = useRef();\n  const userStream = useRef();\n  var roomId = props.match.params.roomId;\n  console.log(\"Room \", sessionStorage);\n\n\n  useEffect(() => {\n    // Set Back Button Event\n    window.addEventListener('popstate', goToBack);\n    console.log(\"peers \", peers);\n    // Connect Camera & Mic\n    navigator.mediaDevices\n      .getUserMedia({ video: true, audio: true })\n      .then((stream) => {\n        userVideoRef.current.srcObject = stream;\n        userStream.current = stream;\n        console.log(currentUser);\n        socket.emit('BE-join-room', { roomId, userName: currentUser});\n        socket.on('FE-user-join', (users) => {\n          // all users\n          console.log(users);\n          const peers = [];\n          users.forEach(({ userId, info }) => {\n            let { userName, video, audio } = info;\n\n            if (userName !== currentUser) {\n              const peer = createPeer(userId, socket.id, stream);\n\n              peer.userName = userName;\n              peer.peerID = userId;\n\n              peersRef.current.push({\n                peerID: userId,\n                peer,\n                userName,\n              });\n              peers.push(peer);\n\n              setUserVideoAudio((preList) => {\n                return {\n                  ...preList,\n                  [peer.userName]: { video, audio },\n                };\n              });\n            }\n          });\n\n          setPeers(peers);\n        });\n\n        socket.on('FE-receive-call', ({ signal, from, info }) => {\n          let { userName, video, audio } = info;\n          const peerIdx = findPeer(from);\n\n          if (!peerIdx) {\n            const peer = addPeer(signal, from, stream);\n\n            peer.userName = userName;\n\n            peersRef.current.push({\n              peerID: from,\n              peer,\n              userName: userName,\n            });\n            setPeers((users) => {\n              return [...users, peer];\n            });\n            setUserVideoAudio((preList) => {\n              return {\n                ...preList,\n                [peer.userName]: { video, audio },\n              };\n            });\n          }\n        });\n\n        socket.on('FE-call-accepted', ({ signal, answerId }) => {\n          const peerIdx = findPeer(answerId);\n          peerIdx.peer.signal(signal);\n        });\n\n        socket.on('FE-user-leave', ({ userId, userName }) => {\n          const peerIdx = findPeer(userId);\n          peerIdx.peer.destroy();\n          setPeers((users) => {\n            users = users.filter((user) => user.peerID !== peerIdx.peer.peerID);\n            return [...users];\n          });\n        });\n      });\n\n    socket.on('FE-toggle-camera', ({ userId, switchTarget }) => {\n      const peerIdx = findPeer(userId);\n\n      setUserVideoAudio((preList) => {\n        let video = preList[peerIdx.userName].video;\n        let audio = preList[peerIdx.userName].audio;\n\n        if (switchTarget === 'video') video = !video;\n        else audio = !audio;\n\n        return {\n          ...preList,\n          [peerIdx.userName]: { video, audio },\n        };\n      });\n    });\n\n    return () => {\n      socket.disconnect();\n    };\n    // eslint-disable-next-line\n  }, []);\n\n  useEffect(() => {\n    const start = new Date();\n    let latestCheckTime = start;\n    const intervalId = setInterval(() => {\n      const now = new Date();\n      const delta = now - latestCheckTime;\n      console.log(delta);\n      latestCheckTime = now;\n      //update firebase user studytime by adding\n    }, 60000);\n    return () => {\n      // unmount\n      clearInterval(intervalId);\n    }\n  }, []);\n\n  function createPeer(userId, caller, stream) {\n    const peer = new Peer({\n      initiator: true,\n      trickle: false,\n      stream,\n    });\n\n    peer.on('signal', (signal) => {\n      socket.emit('BE-call-user', {\n        userToCall: userId,\n        from: caller,\n        signal,\n      });\n    });\n    peer.on('disconnect', () => {\n      peer.destroy();\n    });\n\n    return peer;\n  }\n\n  function addPeer(incomingSignal, callerId, stream) {\n    const peer = new Peer({\n      initiator: false,\n      trickle: false,\n      stream,\n    });\n\n    peer.on('signal', (signal) => {\n      socket.emit('BE-accept-call', { signal, to: callerId });\n    });\n\n    peer.on('disconnect', () => {\n      peer.destroy();\n    });\n\n    peer.signal(incomingSignal);\n\n    return peer;\n  }\n\n  function findPeer(id) {\n    return peersRef.current.find((p) => p.peerID === id);\n  }\n\n  function createUserVideo(peer, index, arr) {\n    return (\n      <VideoContainer className='room-video-container'>\n        <VideoBox\n          className=\"room-video-box\"\n          key={index}\n        >\n          {writeUserName(peer.userName)}\n          <FaIcon className=\"fas fa-expand\" />\n          <VideoCard key={index} peer={peer} number={arr.length} />\n        </VideoBox>\n        <UserName className='room-userName'>{peer.userName}</UserName>\n        <UserFood className='room-userFood'>\n              <img src={'https://images.pexels.com/photos/708587/pexels-photo-708587.jpeg?auto=compress&cs=tinysrgb&h=750&w=1260'} width=\"300\" height=\"300\" alt={peer.userName} />\n        </UserFood>\n        <AddButton onClick={clickAdd}>\n          <img src={wishicon} alt=\"add wish\"/>\n        </AddButton>\n\n      </VideoContainer>\n    );\n  }\n\n  function writeUserName(userName, index) {\n    if (userVideoAudio.hasOwnProperty(userName)) {\n      if (!userVideoAudio[userName].video) {\n        return <UserName key={userName}>{userName}</UserName>;\n      }\n    }\n  }\n\n  // Open Chat\n  const clickChat = (e) => {\n    e.stopPropagation();\n    setDisplayChat(!displayChat);\n  };\n\n  const clickWish = (e) => {\n    e.stopPropagation();\n    setDisplayWish(!displayWish);\n  };\n\n  \n  const clickAdd = (e) => {\n    e.stopPropagation();\n    setDisplayAdd(!displayAdd);\n  };\n\n  // BackButton\n  const goToOtherTable = (e) => {\n    e.stopPropagation();\n    setDisplayOtherTable(!displayOtherTable);\n    console.log(displayOtherTable);\n    // e.preventDefault();\n    // socket.emit('BE-leave-room', { roomId, leaver: currentUser });\n    // sessionStorage.removeItem('user');\n    // window.location.href = '/room-list';\n  };\n\n  const goToBack = (e) => {\n    e.preventDefault();\n    socket.emit('BE-leave-room', { roomId, leaver: currentUser });\n    sessionStorage.removeItem('user');\n    window.location.href = '/';\n  };\n\n  const toggleCameraAudio = (e) => {\n    const target = e.target.getAttribute('data-switch');\n\n    setUserVideoAudio((preList) => {\n      let videoSwitch = preList['localUser'].video;\n      let audioSwitch = preList['localUser'].audio;\n\n      if (target === 'video') {\n        const userVideoTrack = userVideoRef.current.srcObject.getVideoTracks()[0];\n        videoSwitch = !videoSwitch;\n        userVideoTrack.enabled = videoSwitch;\n      } else {\n        const userAudioTrack = userVideoRef.current.srcObject.getAudioTracks()[0];\n        audioSwitch = !audioSwitch;\n\n        if (userAudioTrack) {\n          userAudioTrack.enabled = audioSwitch;\n        } else {\n          userStream.current.getAudioTracks()[0].enabled = audioSwitch;\n        }\n      }\n\n      return {\n        ...preList,\n        localUser: { video: videoSwitch, audio: audioSwitch },\n      };\n    });\n\n    socket.emit('BE-toggle-camera-audio', { roomId, switchTarget: target });\n  };\n\n  const clickScreenSharing = () => {\n    if (!screenShare) {\n      navigator.mediaDevices\n        .getDisplayMedia({ cursor: true })\n        .then((stream) => {\n          const screenTrack = stream.getTracks()[0];\n\n          peersRef.current.forEach(({ peer }) => {\n            // replaceTrack (oldTrack, newTrack, oldStream);\n            peer.replaceTrack(\n              peer.streams[0]\n                .getTracks()\n                .find((track) => track.kind === 'video'),\n              screenTrack,\n              userStream.current\n            );\n          });\n\n          // Listen click end\n          screenTrack.onended = () => {\n            peersRef.current.forEach(({ peer }) => {\n              peer.replaceTrack(\n                screenTrack,\n                peer.streams[0]\n                  .getTracks()\n                  .find((track) => track.kind === 'video'),\n                  userStream.current\n              );\n            });\n            userVideoRef.current.srcObject = userStream.current;\n            setScreenShare(false);\n          };\n\n          userVideoRef.current.srcObject = stream;\n          screenTrackRef.current = screenTrack;\n          setScreenShare(true);\n        });\n    } else {\n      screenTrackRef.current.onended();\n    }\n  };\n\n  const expandScreen = (e) => {\n    const elem = e.target;\n\n    if (elem.requestFullscreen) {\n      elem.requestFullscreen();\n    } else if (elem.mozRequestFullScreen) {\n      /* Firefox */\n      elem.mozRequestFullScreen();\n    } else if (elem.webkitRequestFullscreen) {\n      /* Chrome, Safari & Opera */\n      elem.webkitRequestFullscreen();\n    } else if (elem.msRequestFullscreen) {\n      /* IE/Edge */\n      elem.msRequestFullscreen();\n    }\n  };\n\n  return (\n    <RoomContainer>\n      <Layout/>\n      <AddWish \n          displayAdd={displayAdd}\n          wishlist={wishlist}\n          setWishList={setWishList}\n          userName={peer.userName}\n          userFood={wishicon} />\n      <VideoAndBarContainer>\n        {displayOtherTable ?\n        <RoomList display={displayOtherTable} roomId={roomId} goToScreen={goToOtherTable}/> :\n        <div className=\"room-display-every\">\n          <VideoContainer className='room-video-container'>\n            {/* Current User Video */}\n              <VideoBox\n              className='room-video-box'\n              >\n                <FaIcon className=\"fas fa-expand\" />\n                <MyVideo\n                  onClick={expandScreen}\n                  ref={userVideoRef}\n                  muted\n                  autoPlay\n                  playInline\n                  className = 'myvideo'\n              ></MyVideo>\n              </VideoBox>\n              <UserFood className='room-userFood'>\n                <img src={'https://images.pexels.com/photos/708587/pexels-photo-708587.jpeg?auto=compress&cs=tinysrgb&h=750&w=1260'} />\n              </UserFood>\n              <UserName className='room-userName'>{currentUser}</UserName>\n\n          </VideoContainer>\n            {/* Joined User Vidoe */}\n            {peers &&\n              peers.map((peer, index, arr) => createUserVideo(peer, index, arr))}\n        </div>\n        }\n        <BottomBar\n          clickScreenSharing={clickScreenSharing}\n          clickChat={clickChat}\n          clickWish={clickWish}\n          goToBack={goToBack}\n          goToOtherTable={goToOtherTable}\n          toggleCameraAudio={toggleCameraAudio}\n          userVideoAudio={userVideoAudio['localUser']}\n          screenShare={screenShare}\n        />\n      </VideoAndBarContainer>\n      <Wish displayWishlist={displayWish} wishlist={wishlist} setWishList={setWishList} />\n      <Chat display={displayChat} roomId={roomId}/>\n      \n    </RoomContainer>\n  );\n};\n\nconst RoomContainer = styled.div`\n  display: flex;\n  width: 100%;\n  max-height: 100vh;\n  flex-direction: row;\n  overflow: invisible;\n`;\n\nconst VideoContainer = styled.div`\n\n`;\n\nconst VideoAndBarContainer = styled.div`\n  // position: relative;\n  width: 100%;\n  height: 100vh;\n`;\n\nconst MyVideo = styled.video``;\n\nconst VideoBox = styled.div`\n\n`;\n\nconst UserName = styled.div`\n\n`;\n\nconst UserFood = styled.div`\n  \n`;\n\nconst AddButton = styled.div`\n  width: auto;\n  border: none;\n  font-size: 0.9375rem;\n  padding: 5px;\n  \n  :hover {\n    background-color: #5A38FD;\n    cursor: pointer;\n    border-radius: 15px;\n  }\n\n  .sharing {\n    color: #ee2560;\n  }\n`;\n\nconst FaIcon = styled.i`\n  display: none;\n  position: absolute;\n  right: 15px;\n  top: 15px;\n`;\n\nexport default Room;\n"]},"metadata":{},"sourceType":"module"}