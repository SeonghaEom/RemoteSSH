{"ast":null,"code":"var _jsxFileName = \"/Users/na/Documents/react-redux-boilerplate/src/containers/WriteQuestion.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { addQuestion, getQuestionList } from '../actions';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form'; //redux's state to this.props\n\nconst mapStateToProps = state => ({\n  questionList: state.questionList\n}); //redux's dispatch to this.props\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    _addQuestion: newQ => dispatch(addQuestion(newQ)),\n    _getQuestionList: QL => dispatch(getQuestionList(QL))\n  };\n};\n\nclass Question extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleOnChange = this.handleOnChange.bind(this);\n    this.state = {\n      titleValue: null,\n      bodyValue: null,\n      topicValue: '영어'\n    };\n  }\n\n  handleSubmit() {\n    const {\n      questionList,\n      _addQuestion,\n      _getQuestionList\n    } = this.props; // console.log(this.state.titleValue, this.state.bodyValue);\n\n    _addQuestion({\n      title: this.state.titleValue,\n      body: this.state.bodyValue,\n      topic: this.state.topicValue\n    });\n\n    _getQuestionList(questionList);\n  }\n\n  handleOnChange(event, which) {\n    event.persist();\n    console.log(event);\n\n    switch (which) {\n      case \"title\":\n        this.setState({\n          titleValue: event.target.value\n        });\n        break;\n\n      case \"body\":\n        this.setState({\n          bodyValue: event.target.value\n        });\n        break;\n\n      case \"topic\":\n        this.setState({\n          topicValue: event.target.value\n        });\n        break;\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-writequestion\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"formBasicEmail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      column: \"lg\",\n      lg: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }\n    }, \" Write a question summary \"), /*#__PURE__*/React.createElement(Form.Control, {\n      size: \"lg\",\n      type: \"text\",\n      placeholder: \"Write a question summary\",\n      onChange: event => this.handleOnChange(event, \"title\"),\n      value: this.state.titleValue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"formBasicPassword\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      size: \"sm\",\n      as: \"textarea\",\n      rows: 5,\n      placeholder: \"Write the details about your complex question\",\n      onChange: event => this.handleOnChange(event, \"body\"),\n      value: this.state.bodyValue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"formBasicCheckbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      as: \"select\",\n      onChange: event => this.handleOnChange(event, \"topic\"),\n      value: this.state.topicValue,\n      custom: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 23\n      }\n    }, \"\\uC601\\uC5B4\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 23\n      }\n    }, \"\\uC218\\uB2A5\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 23\n      }\n    }, \"\\uCDE8\\uC5C5\\uC900\\uBE44\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 23\n      }\n    }, \"\\uACF5\\uC2DC\\uC0DD\"))))), /*#__PURE__*/React.createElement(Link, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      onClick: () => this.handleSubmit(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 19\n      }\n    }, \" Post \")));\n  }\n\n} //(reducer, action)\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Question);","map":{"version":3,"sources":["/Users/na/Documents/react-redux-boilerplate/src/containers/WriteQuestion.jsx"],"names":["React","connect","Link","addQuestion","getQuestionList","Button","Form","mapStateToProps","state","questionList","mapDispatchToProps","dispatch","_addQuestion","newQ","_getQuestionList","QL","Question","Component","constructor","props","handleSubmit","bind","handleOnChange","titleValue","bodyValue","topicValue","title","body","topic","event","which","persist","console","log","setState","target","value","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { addQuestion, getQuestionList } from '../actions';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\n\n//redux's state to this.props\nconst mapStateToProps = state => ({\n  questionList: state.questionList,\n})\n\n//redux's dispatch to this.props\nconst mapDispatchToProps = dispatch => {\n    return {\n        _addQuestion: (newQ) => dispatch(addQuestion(newQ)),\n        _getQuestionList: (QL) => dispatch(getQuestionList(QL)),\n    }\n}\n\nclass Question extends React.Component {\n    constructor (props){\n        super(props);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleOnChange = this.handleOnChange.bind(this);\n        this.state = {\n          titleValue : null,\n          bodyValue: null,\n          topicValue: '영어',\n      }\n    }\n\n    handleSubmit() {\n        const {\n            questionList,\n            _addQuestion,\n            _getQuestionList,\n        } = this.props;\n        // console.log(this.state.titleValue, this.state.bodyValue);\n\n        _addQuestion({title: this.state.titleValue, body: this.state.bodyValue, topic: this.state.topicValue});\n        _getQuestionList(questionList)\n    }\n\n    handleOnChange(event, which) {\n      event.persist();\n      console.log(event);\n      switch (which){\n        case (\"title\"):\n          this.setState({\n            titleValue: event.target.value\n          })\n        break;\n        case (\"body\"):\n          this.setState({\n            bodyValue: event.target.value\n          })\n        break;\n        case (\"topic\"):\n          this.setState({\n            topicValue: event.target.value\n          })\n        break;\n      }\n    }\n\n    render(){\n        return(\n            <div className=\"container-writequestion\">\n              <div>\n                <Form>\n                  <Form.Group controlId=\"formBasicEmail\">\n                    <Form.Label column=\"lg\" lg={2}> Write a question summary </Form.Label>\n                    <Form.Control\n                      size=\"lg\"\n                      type=\"text\"\n                      placeholder=\"Write a question summary\"\n                      onChange={(event) => this.handleOnChange(event, \"title\")} value={this.state.titleValue}\n                      />\n                  </Form.Group>\n\n                  <Form.Group controlId=\"formBasicPassword\">\n                    <Form.Control\n                      size=\"sm\"\n                      as=\"textarea\"\n                      rows={5}\n                      placeholder=\"Write the details about your complex question\"\n                      onChange={(event) => this.handleOnChange(event, \"body\")} value={this.state.bodyValue}\n                      />\n                  </Form.Group>\n                  <Form.Group controlId=\"formBasicCheckbox\">\n                    {/* <Form.Check type=\"checkbox\" label=\"Check me out\" /> */}\n                    <Form.Control\n                      as=\"select\"\n                      onChange={(event) => this.handleOnChange(event, \"topic\")} value={this.state.topicValue}\n                      custom>\n                      <option>영어</option>\n                      <option>수능</option>\n                      <option>취업준비</option>\n                      <option>공시생</option>\n                    </Form.Control>\n                  </Form.Group>\n                </Form>\n              </div>\n                <Link to = \"/\">\n                  <Button variant = \"primary\" onClick={() => this.handleSubmit()}> Post </Button>\n                </Link>\n            </div>\n        )\n    }\n}\n\n//(reducer, action)\nexport default connect(mapStateToProps, mapDispatchToProps)(Question);"]},"metadata":{},"sourceType":"module"}