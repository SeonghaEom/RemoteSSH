{"ast":null,"code":"var _jsxFileName = \"/Users/na/Documents/RemoteSSH/src/components/Room/Room.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport Peer from 'simple-peer';\nimport styled from 'styled-components';\nimport socket from '../../socket';\nimport VideoCard from '../Video/VideoCard';\nimport BottomBar from '../BottomBar/BottomBar';\nimport Chat from '../Chat/Chat';\n\nconst Room = props => {\n  var currentUser = sessionStorage.getItem('user');\n  console.log(\"cU \", currentUser);\n  const [peers, setPeers] = useState([]);\n  const [userVideoAudio, setUserVideoAudio] = useState({\n    localUser: {\n      video: true,\n      audio: true\n    }\n  });\n  const [displayChat, setDisplayChat] = useState(false);\n  const [screenShare, setScreenShare] = useState(false);\n  const peersRef = useRef([]);\n  const userVideoRef = useRef();\n  const screenTrackRef = useRef();\n  const userStream = useRef();\n  const roomId = props.match.params.roomId;\n  useEffect(() => {\n    // Set Back Button Event\n    window.addEventListener('popstate', goToBack); // console.log(\"current peers \", peers);\n    // Connect Camera & Mic\n\n    navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: true\n    }).then(stream => {\n      userVideoRef.current.srcObject = stream;\n      userStream.current = stream;\n      console.log(\"currenUser\", currentUser);\n      socket.emit('BE-join-room', {\n        roomId,\n        userName: sessionStorage.getItem('user')\n      });\n      socket.on('FE-user-join', users => {\n        // all users\n        // console.log(users);\n        const peers = [];\n        users.forEach(({\n          userId,\n          info\n        }) => {\n          let {\n            userName,\n            video,\n            audio\n          } = info;\n\n          if (userName !== currentUser) {\n            const peer = createPeer(userId, socket.id, stream);\n            peer.userName = userName;\n            peer.peerID = userId;\n            peersRef.current.push({\n              peerID: userId,\n              peer,\n              userName\n            });\n            peers.push(peer);\n            setUserVideoAudio(preList => {\n              return { ...preList,\n                [peer.userName]: {\n                  video,\n                  audio\n                }\n              };\n            });\n          }\n        });\n        console.log(\"peers \", peers);\n        setPeers(peers);\n      });\n      socket.on('FE-receive-call', ({\n        signal,\n        from,\n        info\n      }) => {\n        let {\n          userName,\n          video,\n          audio\n        } = info;\n        const peerIdx = findPeer(from);\n\n        if (!peerIdx) {\n          const peer = addPeer(signal, from, stream);\n          peer.userName = userName;\n          peersRef.current.push({\n            peerID: from,\n            peer,\n            userName: userName\n          });\n          setPeers(users => {\n            return [...users, peer];\n          });\n          setUserVideoAudio(preList => {\n            return { ...preList,\n              [peer.userName]: {\n                video,\n                audio\n              }\n            };\n          });\n        }\n      });\n      socket.on('FE-call-accepted', ({\n        signal,\n        answerId\n      }) => {\n        const peerIdx = findPeer(answerId);\n        peerIdx.peer.signal(signal);\n      });\n      socket.on('FE-user-leave', ({\n        userId,\n        userName\n      }) => {\n        const peerIdx = findPeer(userId);\n        peerIdx.peer.destroy();\n        setPeers(users => {\n          users = users.filter(user => user.peerID !== peerIdx.peer.peerID);\n          return [...users];\n        });\n      });\n    });\n    socket.on('FE-toggle-camera', ({\n      userId,\n      switchTarget\n    }) => {\n      const peerIdx = findPeer(userId);\n      setUserVideoAudio(preList => {\n        let video = preList[peerIdx.userName].video;\n        let audio = preList[peerIdx.userName].audio;\n        if (switchTarget === 'video') video = !video;else audio = !audio;\n        return { ...preList,\n          [peerIdx.userName]: {\n            video,\n            audio\n          }\n        };\n      });\n    });\n    return () => {\n      socket.disconnect();\n    }; // eslint-disable-next-line\n  }, [peers, userVideoAudio, displayChat, screenShare]);\n  useEffect(() => {\n    const start = new Date();\n    let latestCheckTime = start;\n    const intervalId = setInterval(() => {\n      const now = new Date();\n      const delta = now - latestCheckTime;\n      console.log(delta);\n      latestCheckTime = now; //update firebase user studytime by adding\n    }, 60000);\n    return () => {\n      // unmount\n      clearInterval(intervalId);\n    };\n  }, []);\n\n  function createPeer(userId, caller, stream) {\n    const peer = new Peer({\n      initiator: true,\n      trickle: false,\n      stream\n    });\n    peer.on('signal', signal => {\n      socket.emit('BE-call-user', {\n        userToCall: userId,\n        from: caller,\n        signal\n      });\n    });\n    peer.on('disconnect', () => {\n      peer.destroy();\n    });\n    return peer;\n  }\n\n  function addPeer(incomingSignal, callerId, stream) {\n    const peer = new Peer({\n      initiator: false,\n      trickle: false,\n      stream\n    });\n    peer.on('signal', signal => {\n      socket.emit('BE-accept-call', {\n        signal,\n        to: callerId\n      });\n    });\n    peer.on('disconnect', () => {\n      peer.destroy();\n    });\n    peer.signal(incomingSignal);\n    return peer;\n  }\n\n  function findPeer(id) {\n    return peersRef.current.find(p => p.peerID === id);\n  }\n\n  function createUserVideo(peer, index, arr) {\n    return /*#__PURE__*/React.createElement(VideoBox, {\n      className: `width-peer${peers.length > 8 ? '' : peers.length}`,\n      onClick: expandScreen,\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 7\n      }\n    }, writeUserName(peer.userName), /*#__PURE__*/React.createElement(FaIcon, {\n      className: \"fas fa-expand\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(VideoCard, {\n      key: index,\n      peer: peer,\n      number: arr.length,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  function writeUserName(userName, index) {\n    if (userVideoAudio.hasOwnProperty(userName)) {\n      if (!userVideoAudio[userName].video) {\n        return /*#__PURE__*/React.createElement(UserName, {\n          key: userName,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 16\n          }\n        }, userName);\n      }\n    }\n  } // Open Chat\n\n\n  const clickChat = e => {\n    e.stopPropagation();\n    setDisplayChat(!displayChat);\n  }; // BackButton\n\n\n  const goToBack = e => {\n    e.preventDefault();\n    socket.emit('BE-leave-room', {\n      roomId,\n      leaver: currentUser\n    });\n    sessionStorage.removeItem('user');\n    window.location.href = '/';\n  };\n\n  const toggleCameraAudio = e => {\n    const target = e.target.getAttribute('data-switch');\n    setUserVideoAudio(preList => {\n      let videoSwitch = preList['localUser'].video;\n      let audioSwitch = preList['localUser'].audio;\n\n      if (target === 'video') {\n        const userVideoTrack = userVideoRef.current.srcObject.getVideoTracks()[0];\n        videoSwitch = !videoSwitch;\n        userVideoTrack.enabled = videoSwitch;\n      } else {\n        const userAudioTrack = userVideoRef.current.srcObject.getAudioTracks()[0];\n        audioSwitch = !audioSwitch;\n\n        if (userAudioTrack) {\n          userAudioTrack.enabled = audioSwitch;\n        } else {\n          userStream.current.getAudioTracks()[0].enabled = audioSwitch;\n        }\n      }\n\n      return { ...preList,\n        localUser: {\n          video: videoSwitch,\n          audio: audioSwitch\n        }\n      };\n    });\n    socket.emit('BE-toggle-camera-audio', {\n      roomId,\n      switchTarget: target\n    });\n  };\n\n  const clickScreenSharing = () => {\n    if (!screenShare) {\n      navigator.mediaDevices.getDisplayMedia({\n        cursor: true\n      }).then(stream => {\n        const screenTrack = stream.getTracks()[0];\n        peersRef.current.forEach(({\n          peer\n        }) => {\n          // replaceTrack (oldTrack, newTrack, oldStream);\n          peer.replaceTrack(peer.streams[0].getTracks().find(track => track.kind === 'video'), screenTrack, userStream.current);\n        }); // Listen click end\n\n        screenTrack.onended = () => {\n          peersRef.current.forEach(({\n            peer\n          }) => {\n            peer.replaceTrack(screenTrack, peer.streams[0].getTracks().find(track => track.kind === 'video'), userStream.current);\n          });\n          userVideoRef.current.srcObject = userStream.current;\n          setScreenShare(false);\n        };\n\n        userVideoRef.current.srcObject = stream;\n        screenTrackRef.current = screenTrack;\n        setScreenShare(true);\n      });\n    } else {\n      screenTrackRef.current.onended();\n    }\n  };\n\n  const expandScreen = e => {\n    const elem = e.target;\n\n    if (elem.requestFullscreen) {\n      elem.requestFullscreen();\n    } else if (elem.mozRequestFullScreen) {\n      /* Firefox */\n      elem.mozRequestFullScreen();\n    } else if (elem.webkitRequestFullscreen) {\n      /* Chrome, Safari & Opera */\n      elem.webkitRequestFullscreen();\n    } else if (elem.msRequestFullscreen) {\n      /* IE/Edge */\n      elem.msRequestFullscreen();\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(RoomContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(VideoAndBarContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(VideoContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(VideoBox, {\n    className: `width-peer${peers.length > 8 ? '' : peers.length}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 11\n    }\n  }, userVideoAudio['localUser'].video ? null : /*#__PURE__*/React.createElement(UserName, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 15\n    }\n  }, currentUser), /*#__PURE__*/React.createElement(FaIcon, {\n    className: \"fas fa-expand\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(MyVideo, {\n    onClick: expandScreen,\n    ref: userVideoRef,\n    muted: true,\n    autoPlay: true,\n    playInline: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 13\n    }\n  })), peers && peers.map((peer, index, arr) => createUserVideo(peer, index, arr))), /*#__PURE__*/React.createElement(BottomBar, {\n    clickScreenSharing: clickScreenSharing,\n    clickChat: clickChat,\n    goToBack: goToBack,\n    toggleCameraAudio: toggleCameraAudio,\n    userVideoAudio: userVideoAudio['localUser'],\n    screenShare: screenShare,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Chat, {\n    display: displayChat,\n    roomId: roomId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst RoomContainer = styled.div`\n  display: flex;\n  width: 100%;\n  max-height: 100vh;\n  flex-direction: row;\n`;\nconst VideoContainer = styled.div`\n  max-width: 100%;\n  height: 92%;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  flex-wrap: wrap;\n  align-items: center;\n  padding: 15px;\n  box-sizing: border-box;\n  gap: 10px;\n`;\nconst VideoAndBarContainer = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100vh;\n`;\nconst MyVideo = styled.video``;\nconst VideoBox = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  > video {\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n  }\n\n  :hover {\n    > i {\n      display: block;\n    }\n  }\n`;\nconst UserName = styled.div`\n  position: absolute;\n  font-size: calc(20px + 5vmin);\n  z-index: 1;\n`;\nconst FaIcon = styled.i`\n  display: none;\n  position: absolute;\n  right: 15px;\n  top: 15px;\n`;\nexport default Room;","map":{"version":3,"sources":["/Users/na/Documents/RemoteSSH/src/components/Room/Room.js"],"names":["React","useState","useEffect","useRef","Peer","styled","socket","VideoCard","BottomBar","Chat","Room","props","currentUser","sessionStorage","getItem","console","log","peers","setPeers","userVideoAudio","setUserVideoAudio","localUser","video","audio","displayChat","setDisplayChat","screenShare","setScreenShare","peersRef","userVideoRef","screenTrackRef","userStream","roomId","match","params","window","addEventListener","goToBack","navigator","mediaDevices","getUserMedia","then","stream","current","srcObject","emit","userName","on","users","forEach","userId","info","peer","createPeer","id","peerID","push","preList","signal","from","peerIdx","findPeer","addPeer","answerId","destroy","filter","user","switchTarget","disconnect","start","Date","latestCheckTime","intervalId","setInterval","now","delta","clearInterval","caller","initiator","trickle","userToCall","incomingSignal","callerId","to","find","p","createUserVideo","index","arr","length","expandScreen","writeUserName","hasOwnProperty","clickChat","e","stopPropagation","preventDefault","leaver","removeItem","location","href","toggleCameraAudio","target","getAttribute","videoSwitch","audioSwitch","userVideoTrack","getVideoTracks","enabled","userAudioTrack","getAudioTracks","clickScreenSharing","getDisplayMedia","cursor","screenTrack","getTracks","replaceTrack","streams","track","kind","onended","elem","requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","msRequestFullscreen","map","RoomContainer","div","VideoContainer","VideoAndBarContainer","MyVideo","VideoBox","UserName","FaIcon","i"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport Peer from 'simple-peer';\nimport styled from 'styled-components';\nimport socket from '../../socket';\nimport VideoCard from '../Video/VideoCard';\nimport BottomBar from '../BottomBar/BottomBar';\nimport Chat from '../Chat/Chat';\n\nconst Room = (props) => {\n  var currentUser = sessionStorage.getItem('user');\n  console.log(\"cU \", currentUser);\n  const [peers, setPeers] = useState([]);\n  const [userVideoAudio, setUserVideoAudio] = useState({\n    localUser: { video: true, audio: true },\n  });\n  const [displayChat, setDisplayChat] = useState(false);\n  const [screenShare, setScreenShare] = useState(false);\n  const peersRef = useRef([]);\n  const userVideoRef = useRef();\n  const screenTrackRef = useRef();\n  const userStream = useRef();\n  const roomId = props.match.params.roomId;\n\n  useEffect(() => {\n    // Set Back Button Event\n    window.addEventListener('popstate', goToBack);\n    // console.log(\"current peers \", peers);\n    \n\n    // Connect Camera & Mic\n    navigator.mediaDevices\n      .getUserMedia({ video: true, audio: true })\n      .then((stream) => {\n        userVideoRef.current.srcObject = stream;\n        userStream.current = stream;\n        console.log(\"currenUser\" ,currentUser);\n        socket.emit('BE-join-room', { roomId, userName: sessionStorage.getItem('user') });\n        socket.on('FE-user-join', (users) => {\n          // all users\n          // console.log(users);\n          const peers = [];\n          users.forEach(({ userId, info }) => {\n            let { userName, video, audio } = info;\n\n            if (userName !== currentUser) {\n              const peer = createPeer(userId, socket.id, stream);\n\n              peer.userName = userName;\n              peer.peerID = userId;\n\n              peersRef.current.push({\n                peerID: userId,\n                peer,\n                userName,\n              });\n              peers.push(peer);\n\n              setUserVideoAudio((preList) => {\n                return {\n                  ...preList,\n                  [peer.userName]: { video, audio },\n                };\n              });\n            }\n          });\n          console.log(\"peers \", peers);\n          setPeers(peers);\n        });\n\n        socket.on('FE-receive-call', ({ signal, from, info }) => {\n          let { userName, video, audio } = info;\n          const peerIdx = findPeer(from);\n\n          if (!peerIdx) {\n            const peer = addPeer(signal, from, stream);\n\n            peer.userName = userName;\n\n            peersRef.current.push({\n              peerID: from,\n              peer,\n              userName: userName,\n            });\n            setPeers((users) => {\n              return [...users, peer];\n            });\n            setUserVideoAudio((preList) => {\n              return {\n                ...preList,\n                [peer.userName]: { video, audio },\n              };\n            });\n          }\n        });\n\n        socket.on('FE-call-accepted', ({ signal, answerId }) => {\n          const peerIdx = findPeer(answerId);\n          peerIdx.peer.signal(signal);\n        });\n\n        socket.on('FE-user-leave', ({ userId, userName }) => {\n          const peerIdx = findPeer(userId);\n          peerIdx.peer.destroy();\n          setPeers((users) => {\n            users = users.filter((user) => user.peerID !== peerIdx.peer.peerID);\n            return [...users];\n          });\n        });\n      });\n\n    socket.on('FE-toggle-camera', ({ userId, switchTarget }) => {\n      const peerIdx = findPeer(userId);\n\n      setUserVideoAudio((preList) => {\n        let video = preList[peerIdx.userName].video;\n        let audio = preList[peerIdx.userName].audio;\n\n        if (switchTarget === 'video') video = !video;\n        else audio = !audio;\n\n        return {\n          ...preList,\n          [peerIdx.userName]: { video, audio },\n        };\n      });\n    });\n\n    return () => {\n      socket.disconnect();\n    };\n    // eslint-disable-next-line\n  }, [peers, userVideoAudio, displayChat, screenShare]);\n\n  useEffect(() => {\n    const start = new Date();\n    let latestCheckTime = start;\n    const intervalId = setInterval(() => {\n      const now = new Date();\n      const delta = now - latestCheckTime;\n      console.log(delta);\n      latestCheckTime = now;\n      //update firebase user studytime by adding\n    }, 60000);\n    return () => {\n      // unmount\n      clearInterval(intervalId);\n    }\n  }, []);\n\n  function createPeer(userId, caller, stream) {\n    const peer = new Peer({\n      initiator: true,\n      trickle: false,\n      stream,\n    });\n\n    peer.on('signal', (signal) => {\n      socket.emit('BE-call-user', {\n        userToCall: userId,\n        from: caller,\n        signal,\n      });\n    });\n    peer.on('disconnect', () => {\n      peer.destroy();\n    });\n\n    return peer;\n  }\n\n  function addPeer(incomingSignal, callerId, stream) {\n    const peer = new Peer({\n      initiator: false,\n      trickle: false,\n      stream,\n    });\n\n    peer.on('signal', (signal) => {\n      socket.emit('BE-accept-call', { signal, to: callerId });\n    });\n\n    peer.on('disconnect', () => {\n      peer.destroy();\n    });\n\n    peer.signal(incomingSignal);\n\n    return peer;\n  }\n\n  function findPeer(id) {\n    return peersRef.current.find((p) => p.peerID === id);\n  }\n\n  function createUserVideo(peer, index, arr) {\n    return (\n      <VideoBox\n        className={`width-peer${peers.length > 8 ? '' : peers.length}`}\n        onClick={expandScreen}\n        key={index}\n      >\n        {writeUserName(peer.userName)}\n        <FaIcon className=\"fas fa-expand\" />\n        <VideoCard key={index} peer={peer} number={arr.length} />\n      </VideoBox>\n    );\n  }\n\n  function writeUserName(userName, index) {\n    if (userVideoAudio.hasOwnProperty(userName)) {\n      if (!userVideoAudio[userName].video) {\n        return <UserName key={userName}>{userName}</UserName>;\n      }\n    }\n  }\n\n  // Open Chat\n  const clickChat = (e) => {\n    e.stopPropagation();\n    setDisplayChat(!displayChat);\n  };\n\n  // BackButton\n  const goToBack = (e) => {\n    e.preventDefault();\n    socket.emit('BE-leave-room', { roomId, leaver: currentUser });\n    sessionStorage.removeItem('user');\n    window.location.href = '/';\n  };\n\n  const toggleCameraAudio = (e) => {\n    const target = e.target.getAttribute('data-switch');\n\n    setUserVideoAudio((preList) => {\n      let videoSwitch = preList['localUser'].video;\n      let audioSwitch = preList['localUser'].audio;\n\n      if (target === 'video') {\n        const userVideoTrack = userVideoRef.current.srcObject.getVideoTracks()[0];\n        videoSwitch = !videoSwitch;\n        userVideoTrack.enabled = videoSwitch;\n      } else {\n        const userAudioTrack = userVideoRef.current.srcObject.getAudioTracks()[0];\n        audioSwitch = !audioSwitch;\n\n        if (userAudioTrack) {\n          userAudioTrack.enabled = audioSwitch;\n        } else {\n          userStream.current.getAudioTracks()[0].enabled = audioSwitch;\n        }\n      }\n\n      return {\n        ...preList,\n        localUser: { video: videoSwitch, audio: audioSwitch },\n      };\n    });\n\n    socket.emit('BE-toggle-camera-audio', { roomId, switchTarget: target });\n  };\n\n  const clickScreenSharing = () => {\n    if (!screenShare) {\n      navigator.mediaDevices\n        .getDisplayMedia({ cursor: true })\n        .then((stream) => {\n          const screenTrack = stream.getTracks()[0];\n\n          peersRef.current.forEach(({ peer }) => {\n            // replaceTrack (oldTrack, newTrack, oldStream);\n            peer.replaceTrack(\n              peer.streams[0]\n                .getTracks()\n                .find((track) => track.kind === 'video'),\n              screenTrack,\n              userStream.current\n            );\n          });\n\n          // Listen click end\n          screenTrack.onended = () => {\n            peersRef.current.forEach(({ peer }) => {\n              peer.replaceTrack(\n                screenTrack,\n                peer.streams[0]\n                  .getTracks()\n                  .find((track) => track.kind === 'video'),\n                  userStream.current\n              );\n            });\n            userVideoRef.current.srcObject = userStream.current;\n            setScreenShare(false);\n          };\n\n          userVideoRef.current.srcObject = stream;\n          screenTrackRef.current = screenTrack;\n          setScreenShare(true);\n        });\n    } else {\n      screenTrackRef.current.onended();\n    }\n  };\n\n  const expandScreen = (e) => {\n    const elem = e.target;\n\n    if (elem.requestFullscreen) {\n      elem.requestFullscreen();\n    } else if (elem.mozRequestFullScreen) {\n      /* Firefox */\n      elem.mozRequestFullScreen();\n    } else if (elem.webkitRequestFullscreen) {\n      /* Chrome, Safari & Opera */\n      elem.webkitRequestFullscreen();\n    } else if (elem.msRequestFullscreen) {\n      /* IE/Edge */\n      elem.msRequestFullscreen();\n    }\n  };\n\n  return (\n    <RoomContainer>\n      <VideoAndBarContainer>\n        <VideoContainer>\n          {/* Current User Video */}\n          <VideoBox\n            className={`width-peer${peers.length > 8 ? '' : peers.length}`}\n          >\n            {userVideoAudio['localUser'].video ? null : (\n              <UserName>{currentUser}</UserName>\n            )}\n            <FaIcon className=\"fas fa-expand\" />\n            <MyVideo\n              onClick={expandScreen}\n              ref={userVideoRef}\n              muted\n              autoPlay\n              playInline\n            ></MyVideo>\n          </VideoBox>\n          {/* Joined User Vidoe */}\n          {peers &&\n            peers.map((peer, index, arr) => createUserVideo(peer, index, arr))}\n        </VideoContainer>\n        <BottomBar\n          clickScreenSharing={clickScreenSharing}\n          clickChat={clickChat}\n          goToBack={goToBack}\n          toggleCameraAudio={toggleCameraAudio}\n          userVideoAudio={userVideoAudio['localUser']}\n          screenShare={screenShare}\n        />\n      </VideoAndBarContainer>\n      <Chat display={displayChat} roomId={roomId} />\n    </RoomContainer>\n  );\n};\n\nconst RoomContainer = styled.div`\n  display: flex;\n  width: 100%;\n  max-height: 100vh;\n  flex-direction: row;\n`;\n\nconst VideoContainer = styled.div`\n  max-width: 100%;\n  height: 92%;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  flex-wrap: wrap;\n  align-items: center;\n  padding: 15px;\n  box-sizing: border-box;\n  gap: 10px;\n`;\n\nconst VideoAndBarContainer = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100vh;\n`;\n\nconst MyVideo = styled.video``;\n\nconst VideoBox = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  > video {\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n  }\n\n  :hover {\n    > i {\n      display: block;\n    }\n  }\n`;\n\nconst UserName = styled.div`\n  position: absolute;\n  font-size: calc(20px + 5vmin);\n  z-index: 1;\n`;\n\nconst FaIcon = styled.i`\n  display: none;\n  position: absolute;\n  right: 15px;\n  top: 15px;\n`;\n\nexport default Room;\n"]},"metadata":{},"sourceType":"module"}