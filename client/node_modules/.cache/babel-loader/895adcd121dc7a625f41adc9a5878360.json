{"ast":null,"code":"function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nimport { bisect } from 'd3-array';\n\nvar DiscreteScale = function () {\n  function DiscreteScale() {\n    var _this = this;\n\n    _classCallCheck(this, DiscreteScale);\n\n    this.getValue = function (x) {\n      var range = _this.range,\n          domain = _this.domain,\n          n = _this.n;\n      return range[bisect(domain, x, 0, n)];\n    };\n\n    this.setDomain = function (val) {\n      _this.x0 = +val[0];\n      _this.x1 = +val[1];\n\n      _this.rescale();\n\n      return _this;\n    };\n\n    this.setRange = function (val) {\n      _this.range = val.slice();\n      _this.n = _this.range.length - 1;\n      return _this;\n    };\n\n    this.x0 = 0;\n    this.x1 = 1;\n    this.domain = [0.5];\n    this.range = [0, 1];\n    this.n = 1;\n  }\n\n  DiscreteScale.prototype.rescale = function rescale() {\n    var x0 = this.x0,\n        x1 = this.x1,\n        n = this.n;\n    var i = -1;\n    this.domain = new Array(n);\n\n    while (++i < n) {\n      this.domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    }\n  };\n\n  return DiscreteScale;\n}();\n\nexport default DiscreteScale;","map":null,"metadata":{},"sourceType":"module"}